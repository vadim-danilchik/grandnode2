@model MenuModel
@await Component.InvokeAsync("Widget", new { widgetZone = "header_menu_before" })
@if (Model.DisplayHomePageMenu)
{
    <li class="home-link">
        <a href="@Url.RouteUrl("HomePage")">
            <span class="title">@Loc["HomePage"]</span>
        </a>
    </li>
}
@{
    var rootCategories = Model.Categories.ToList();
}
@foreach (var category in rootCategories)
{
    var categoryLineModel = new MenuModel.CategoryLineModel
    {
        Category = category
    };
    <partial name="_CategoryLine.Menu" model="categoryLineModel" />
}
<li><hr class="dropdown-divider"></li>
@foreach (var mpage in Model.Pages)
{
    <li class="d-block d-lg-none">
        <a href="@Url.RouteUrl("Page", new { SeName=mpage.SeName })">
            <span class="title">@mpage.Name</span>
        </a>
    </li>
}

@if (Model.DisplaySearchMenu | Model.DisplayNewProductsMenu | Model.DisplayCustomerMenu | Model.DisplayBlogMenu | Model.DisplayContactUsMenu)
{
    @if (Model.NewProductsEnabled && Model.DisplayNewProductsMenu)
    {
        <li>
            <a href="@Url.RouteUrl("NewProducts")">
                <span class="title">@Loc["Products.NewProducts"]</span>
            </a>
        </li>
    }
    @if (Model.DisplaySearchMenu)
    {
        <li>
            <a href="@Url.RouteUrl("ProductSearch")">
                <span class="title">@Loc["Search"]</span>
            </a>
        </li>
    }
    @if (Model.DisplayCustomerMenu)
    {
        <li>
            <a href="@Url.RouteUrl("CustomerInfo")">
                <span class="title">@Loc["Account.MyAccount"]</span>
            </a>
        </li>
    }
    @if (Model.BlogEnabled && Model.DisplayBlogMenu)
    {
        <li>
            <a href="@Url.RouteUrl("Blog")">
                <span class="title">@Loc["Blog"]</span>
            </a>
        </li>
    }
    @if (Model.DisplayContactUsMenu)
    {
        <li>
            <a href="@Url.RouteUrl("ContactUs")">
                <span class="title">@Loc["ContactUs"]</span>
            </a>
        </li>
    }
}
<li class="mt-auto other-links flex-column d-none d-lg-block">
    <ul class="d-flex flex-column align-items-start">
        <li class="">
            <span class="">@Loc["menu.contacts"]</span>
        </li>
        <li class="w-100">
            <div class="d-flex justify-content-between">
                @if (!string.IsNullOrEmpty(Loc["menu.contacts.telegram.value"]))
                {
                    <div class="nav-item">
                        <a title="telegram" href="tg://resolve?domain=@Loc["menu.contacts.telegram.value"]" rel="noopener" target="_blank">
                            <img height="32" width="32" src="../Themes/eShop/Content/images/telegram.svg" alt="viber" />
                            <span class="sr-only">Telegram</span>
                        </a>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Loc["header.phone.value"]))
                {
                    <div class="nav-item">
                        <a title="phone">
                            <img height="32" width="32" src="../Themes/eShop/Content/images/mts.svg#svgView(viewBox(0, 0, 258, 259))" alt="phone" />
                            <span class="sr-only">Phone</span>
                        </a>
                    </div>
                    <div class="nav-item">
                        <a title="viber" href="viber://chat?number=@Loc["menu.contacts.viber.value"]" rel="noopener" target="_blank">
                            <img height="32" width="32" src="../Themes/eShop/Content/images/viber.svg" alt="viber" />
                            <span class="sr-only">Viber</span>
                        </a>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Loc["menu.contacts.instagram.value"]))
                {
                    <div class="nav-item">
                        <a href="@Loc["menu.contacts.instagram.value"]" rel="noopener" target="_blank">
                            <img height="32" width="32" src="../Themes/eShop/Content/images/instagram.svg" alt="instagram" />
                            <span class="sr-only">instagram</span>
                            @*<span class="text">@Loc["menu.contacts.instagram.value"]</span>*@
                        </a>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Loc["menu.contacts.email.value"]))
                {
                    <div class="nav-item">
                        <a title="mail" href="mailto:@Loc["menu.contacts.email.value"]" rel="noopener" target="_blank">
                            <img height="32" width="32" src="../Themes/eShop/Content/images/mail.svg" alt="viber" />
                            <span class="sr-only">Mail</span>
                        </a>
                    </div>
                }
            </div>
        </li>
        <li class="w-100 d-flex justify-content-center">
            <h4 class="phone">@Loc["menu.contacts.viber.value"]</h4>
        </li>
    </ul>
    <!--<ul class="d-flex align-items-start">-->
        @*<li class="">
                <span class="">@Loc["menu.contacts"]</span>
            </li>*@
        @*<li class="mr-2 nav-item">
                <div class="text nav-link">@Loc["header.worktime.value"]</div>
            </li>*@
        @*<li class="">
                <a title="phone" href="viber://chat?number=@Loc["header.phone.value"]" rel="noopener" target="_blank">
                    <img height="32" width="32" src="../Themes/eShop/Content/images/mts.svg#svgView(viewBox(0, 0, 258, 259))" alt="phone" />
                    <span class="sr-only">Phone</span>
                    <span class="text">@Loc["header.phone.value"]</span>
                </a>
            </li>*@

    <!--</ul>-->
</li>

@await Component.InvokeAsync("Widget", new { widgetZone = "header_menu_after" })

@{
    var rootCategoriesResponsive = Model.Categories.ToList();
    //name it "Categories" if we have only categories. Otherwise, "Menu"
    var responsiveMenuTitle = (rootCategoriesResponsive.Any() && Model.Pages.Any()) ? Loc["Categories"] : Loc["Menu"];
}
